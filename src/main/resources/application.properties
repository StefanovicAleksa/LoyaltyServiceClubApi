spring.application.name=loyalty_service_club_api

# Database setup (uses .env variables)
spring.datasource.url=jdbc:postgresql://localhost:5432/loyalty_service_club
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA settings
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway configuration - DISABLE Spring Boot's Flyway to avoid conflicts
spring.flyway.enabled=false

# AWS Configuration
aws.region=${AWS_REGION}
aws.access-key-id=${AWS_ACCESS_KEY_ID}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}
aws.role-arn=${AWS_ROLE_ARN}

# SNS Configuration
sns.topic-arn=${SNS_TOPIC_ARN}

# SES Configuration
ses.source-email=${SES_SOURCE_EMAIL}
ses.region=${SES_REGION}

# Verification Settings
verification.sandbox-mode=${SANDBOX_MODE}
verification.otp-expiry-minutes=${OTP_EXPIRY_MINUTES:10}
verification.max-attempts=${MAX_VERIFICATION_ATTEMPTS:3}
verification.otp-length=${OTP_LENGTH:6}
verification.resend-cooldown-seconds=${RESEND_COOLDOWN_SECONDS:60}

# OTP Rate Limiting - wait times in seconds [0s, 1m, 2m, 5m, 15m]
verification.otp-rate-limit-wait-seconds=0,60,120,300,900
verification.otp-rate-limit-reset-hours=1

# Verification Email Templates
verification.templates.email-subject=Verify Your Email Address
verification.templates.email-html-template=<html><body><h2>Email Verification</h2><p>Your verification code is: <strong>{otpCode}</strong></p><p>This code will expire in {expiryMinutes} minutes.</p><p>If you didn't request this code, please ignore this email.</p></body></html>
verification.templates.email-text-template=Your verification code is {otpCode}. This code expires in {expiryMinutes} minutes. If you didn't request this code, please ignore this email.

# Verification SMS Template
verification.templates.sms-template=Your verification code is {otpCode}